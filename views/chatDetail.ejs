<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/main.css" rel="stylesheet">
</head>

<!--input 태그는 form 안에 적어 두는게 좋음-->
<!--input 태그에 type의 형태에 따라 다양한기능 구현 가능-->
<body class="grey-bg">

    <%- include('nav.ejs') %>
    
    <%= JSON.stringify(result) %>
    <div class="detail-bg">
        
        <div class="chat-screen">
            <div class="chat-box"><span>안녕하세요</span></div>
            <div class="chat-box"><span>안녕하세요</span></div>
            <div class="chat-box mine"><span>안녕하세요</span></div>
          </div>
        </div>
        <div class="chat-form">
          <input class="chat-input">
          <button class="chat-button">전송</button>
    </div> 
    <!--웹소켓을 사용해야하는 HTML에다가 다음과 같은 문구를 넣어둠-->
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
      const socket = io()
      //[유저 -> 서버] 데이터 전송은
      // socket.emit('데이터이름','데이터')
      socket.emit('ask-join','<%= result._id %>') //서버에다가 ask-join이름으로 document의 id를 보냄

      //1.버튼누르면 서버에 부탁 //chat
      document.querySelector('.chat-button').addEventListener('click',function(){
        let 입력한거 = document.querySelector('.chat-input').value
        socket.emit('message-send',{msg : 입력한거, room : '<%= result._id%>'})
      })

      //데이터 수신하려면 socket.on()
      socket.on('message-broadcast',(data)=>{
      document.querySelector('.chat-screen').insertAdjacentHTML('beforeend',`<div class="chat-box"><span>${data}</span></div>
`)//<div>속 내용이 querySelector안에 들어감
      })
    </script>

  </body>
</html> 